{"version":3,"sources":["actions/index.js","reducers/index.js","components/TaskAddForm.jsx","components/TaskEditForm.jsx","components/TaskFilter.jsx","components/TaskAll.jsx","components/App.jsx","index.js"],"names":["addTask","createAction","removeTask","completeTask","submitEditForm","editTaskForm","activeTask","filterTask","tasks","handleActions","actions","state","task","payload","newId","uniqueId","id","isComplited","isEdit","taskId","omitBy","value","editTask","active","isActive","btnDataSetValue","filter","combineReducers","TaskAddForm","dispatch","useDispatch","onSubmit","values","form","setTimeout","reset","render","handleSubmit","submitting","pristine","className","htmlFor","type","component","name","placeholder","disabled","TaskEditForm","activeTaskId","useSelector","initialValue","taskName","taskDescrip","TaskFilter","filterTaskClick","e","target","dataset","allBtn","classNames","activeBtn","completedBtn","data-value","onClick","all","completed","TaskAll","allTask","allTaskArray","Object","filterValue","activeButton","filteredTasks","removeTaskClick","editTaskClick","map","width","height","viewBox","fill","xmlns","d","fillRule","App","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.08d421d3.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const addTask = createAction('TASK_ADD');\n\nexport const removeTask = createAction('TASK_REMOVE');\n\nexport const completeTask = createAction('TASK_COMPLETE');\n\nexport const submitEditForm = createAction('TASK_EDIT_SUBMIT');\n\nexport const editTaskForm = createAction('TASK_EDIT_FORM');\n\nexport const activeTask = createAction('TASK_ACTIVE');\n\nexport const filterTask = createAction('TASK_FILTER');\n","import { handleActions } from 'redux-actions';\nimport { combineReducers } from 'redux';\nimport { uniqueId, omitBy } from 'lodash';\nimport * as actions from '../actions/index';\n\nconst tasks = handleActions({\n  [actions.addTask](state, { payload: task }) {\n    const newId = uniqueId();\n    return {\n      ...state,\n      [newId]: {\n        id: newId,\n        ...task,\n        isComplited: false,\n        isEdit: false,\n      },\n    };\n  },\n\n  [actions.removeTask](state, { payload: taskId }) {\n    return omitBy(state, (value) => value.id === taskId);\n  },\n\n  [actions.completeTask](state, { payload: taskId }) {\n    return {\n      ...state,\n      [taskId]: { ...state[taskId], isComplited: !state[taskId].isComplited },\n    };\n  },\n\n  [actions.editTaskForm](state, { payload: taskId }) {\n    return {\n      ...state,\n      [taskId]: { ...state[taskId], isEdit: !state[taskId].isEdit },\n    };\n  },\n\n  [actions.submitEditForm](state, { payload: editTask }) {\n    return {\n      ...state,\n      ...editTask,\n    };\n  },\n\n}, {});\n\nconst active = handleActions({\n  [actions.activeTask](state, { payload: id }) {\n    return {\n      ...state,\n      isActive: id,\n    };\n  },\n\n  [actions.filterTask](state, { payload: btnDataSetValue }) {\n    return {\n      ...state,\n      filter: btnDataSetValue,\n    };\n  },\n\n}, { isActive: null, filter: 'all' });\n\nexport default combineReducers({\n  tasks,\n  active,\n});\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../actions/index';\n\nconst TaskAddForm = () => {\n  const dispatch = useDispatch();\n\n  const addTaskSubmit = (values, form) => {\n    dispatch(addTask(values));\n    setTimeout(form.reset, 0);\n  };\n\n  return (\n    <Form\n      onSubmit={addTaskSubmit}\n      render={({ handleSubmit, submitting, pristine }) => (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"taskName\">Введите название:</label>\n            <Field\n              type=\"text\"\n              component=\"input\"\n              className=\"form-control\"\n              name=\"taskName\"\n              placeholder=\"Сделать первый шаг в проекте\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"taskDescrip\">Введите описание:</label>\n            <Field\n              type=\"text\"\n              component=\"input\"\n              className=\"form-control\"\n              name=\"taskDescrip\"\n              placeholder=\"Нужно успеть до 6 утра\"\n            />\n          </div>\n          <div className=\"text-center\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={submitting || pristine}\n            >\n              Добавить задачу\n            </button>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default TaskAddForm;\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { submitEditForm, activeTask } from '../actions/index';\n\nconst TaskEditForm = () => {\n  const dispatch = useDispatch();\n\n  const activeTaskId = useSelector((state) => state.active.isActive);\n  const tasks = useSelector((state) => state.tasks);\n\n  const addEditTaskSubmit = (values) => {\n    dispatch(submitEditForm({ [activeTaskId]: { id: activeTaskId, ...values } }));\n    dispatch(activeTask(null));\n  };\n\n  return (\n    <Form\n      onSubmit={addEditTaskSubmit}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <div>\n            <div className=\"form-group\">\n              <Field\n                type=\"text\"\n                component=\"input\"\n                className=\"form-control\"\n                name=\"taskName\"\n                initialValue={tasks[activeTaskId].taskName}\n              />\n            </div>\n            <div className=\"form-group\">\n              <Field\n                type=\"text\"\n                component=\"input\"\n                className=\"form-control\"\n                name=\"taskDescrip\"\n                initialValue={tasks[activeTaskId].taskDescrip}\n              />\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-sm mt-3 mb-3 btn-warning\">ГОТОВО</button>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default TaskEditForm;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterTask } from '../actions/index';\n\nconst TaskFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector((state) => state.active.filter);\n\n  const filterTaskClick = (e) => {\n    dispatch(filterTask(e.target.dataset.value));\n  };\n\n  const titles = {\n    all: 'Список всех задач',\n    active: 'Список активных задач',\n    completed: 'Список завершенных задач',\n  };\n\n  const allBtn = classNames(\n    'btn btn-success btn-sm mr-3', { active: filter === 'all', disabled: filter !== 'all' },\n  );\n  const activeBtn = classNames(\n    'btn btn-success btn-sm mr-3', { active: filter === 'active', disabled: filter !== 'active' },\n  );\n  const completedBtn = classNames(\n    'btn btn-success btn-sm mr-3', { active: filter === 'completed', disabled: filter !== 'completed' },\n  );\n\n  return (\n    <div>\n      <div className=\"row pt-3 pb-5\">\n        <div className=\"col-12\">\n          <h3>Фильтр:</h3>\n        </div>\n      </div>\n      <div className=\"row\">\n        <ul className=\"nav nav-pills nav-fill\">\n          <button data-value=\"all\" type=\"button\" className={allBtn} onClick={filterTaskClick}>ВСЕ</button>\n          <button data-value=\"active\" type=\"button\" className={activeBtn} onClick={filterTaskClick}>АКТИВНЫЕ</button>\n          <button data-value=\"completed\" type=\"button\" className={completedBtn} onClick={filterTaskClick}>ЗАВЕРШЕННЫЕ</button>\n        </ul>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1 className=\"text-center p-3\">\n            {titles[filter]}\n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskFilter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  removeTask, completeTask, editTaskForm, activeTask,\n} from '../actions/index';\nimport TaskEditForm from './TaskEditForm';\nimport TaskFilter from './TaskFilter';\n\nconst TaskAll = () => {\n  const dispatch = useDispatch();\n\n  const allTask = useSelector((state) => state.tasks);\n  const allTaskArray = Object.values(allTask);\n\n  const filterValue = useSelector((state) => state.active.filter);\n\n  const activeButton = useSelector((state) => state.active.isActive);\n\n  const filteredTasks = allTaskArray.filter((task) => {\n    if (filterValue === 'active') return !task.isComplited;\n    if (filterValue === 'completed') return task.isComplited;\n    return task;\n  });\n\n  const removeTaskClick = (id) => () => {\n    dispatch(removeTask(id));\n  };\n\n  const completeTaskClick = (id) => () => {\n    dispatch(completeTask(id));\n  };\n\n  const editTaskClick = (id) => () => {\n    dispatch(editTaskForm(id));\n    dispatch(activeTask(id));\n  };\n\n  return (\n    <div>\n      <div>\n        <TaskFilter />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <ul className=\"list-group\">\n            {\n              filteredTasks.map((task) => (\n                <li key={task.id} className={task.isComplited ? 'list-group-item shadow p-3 mb-5 bg-success rounded text-white' : 'list-group-item shadow p-3 mb-5 bg-white rounded text-dark'}>\n                  <div>\n                    { task.isEdit\n                      ? (\n                        <div>\n                          <TaskEditForm />\n                        </div>\n                      )\n                      : (\n                        <div>\n                          <h4>{task.taskName}</h4>\n                          <p>{task.taskDescrip}</p>\n                        </div>\n                      )}\n                  </div>\n                  <button type=\"button\" className=\"btn btn-success btn-sm mr-3\" onClick={completeTaskClick(task.id)}>{task.isComplited ? 'Активировать задачу' : 'Завершить задачу'}</button>\n                  <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={removeTaskClick(task.id)}>Удалить задачу</button>\n                  <button type=\"button\" disabled={activeButton} className=\"btn btn-default btn-lg float-right\" onClick={editTaskClick(task.id)}>\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className={task.isComplited ? 'bi bi-pencil-square text-white' : 'bi bi-pencil-square'} fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                      <path fillRule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\n                    </svg>\n                  </button>\n                </li>\n              ))\n              }\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskAll;\n","import React from 'react';\nimport TaskAddFrom from './TaskAddForm';\nimport TaskAll from './TaskAll';\n\nconst App = () => (\n  <div className=\"container\">\n    <div className=\"row pt-3\">\n      <div className=\"col-12\">\n        <h1 className=\"text-center\">Менеджер задач Lite</h1>\n        <TaskAddFrom />\n      </div>\n    </div>\n    <div>\n      <TaskAll />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport App from './components/App';\n\nconst store = createStore(\n  rootReducer,\n  /* eslint-disable no-underscore-dangle */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  /* eslint-enable */\n);\n\nReactDOM.render(\n  /* eslint-disable-next-line react/jsx-filename-extension */\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  /* eslint-enable */\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}